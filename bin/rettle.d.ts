import { RettleConfigInterface } from "./utils/config";
import { EmotionCache } from "@emotion/cache";
import * as React from "react";
import { SerializedStyles } from "@emotion/react";
declare const defineOption: (options: () => Partial<RettleConfigInterface>) => () => Partial<RettleConfigInterface>;
declare const createCache: (key: string) => EmotionCache;
declare const createRettle: (element: JSX.Element, cache?: EmotionCache) => import("@emotion/server/create-instance").EmotionCritical;
declare const createDynamicRoute: (routing: (id: string) => object, Application: React.FC<any>, cache?: EmotionCache) => (id: string) => import("@emotion/server/create-instance").EmotionCritical;
/***********************/
/***********************/
type RettleComponent = {
    frame: "[fr]";
    children: JSX.Element | React.ReactNode;
    css?: SerializedStyles;
    clientKey?: string;
};
declare const Component: {
    a: (props: RettleComponent & React.ClassAttributes<HTMLAnchorElement> & React.AnchorHTMLAttributes<HTMLAnchorElement>) => JSX.Element;
    abbr: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    address: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    area: (props: RettleComponent & React.ClassAttributes<HTMLAreaElement> & React.AreaHTMLAttributes<HTMLAreaElement>) => JSX.Element;
    article: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    aside: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    audio: (props: RettleComponent & React.ClassAttributes<HTMLAudioElement> & React.AudioHTMLAttributes<HTMLAudioElement>) => JSX.Element;
    b: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    base: (props: RettleComponent & React.ClassAttributes<HTMLBaseElement> & React.BaseHTMLAttributes<HTMLBaseElement>) => JSX.Element;
    bdi: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    bdo: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    big: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    blockquote: (props: RettleComponent & React.ClassAttributes<HTMLQuoteElement> & React.BlockquoteHTMLAttributes<HTMLQuoteElement>) => JSX.Element;
    body: (props: RettleComponent & React.ClassAttributes<HTMLBodyElement> & React.HTMLAttributes<HTMLBodyElement>) => JSX.Element;
    br: (props: RettleComponent & React.ClassAttributes<HTMLBRElement> & React.HTMLAttributes<HTMLBRElement>) => JSX.Element;
    button: (props: RettleComponent & React.ClassAttributes<HTMLButtonElement> & React.ButtonHTMLAttributes<HTMLButtonElement>) => JSX.Element;
    canvas: (props: RettleComponent & React.ClassAttributes<HTMLCanvasElement> & React.CanvasHTMLAttributes<HTMLCanvasElement>) => JSX.Element;
    caption: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    center: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    cite: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    code: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    col: (props: RettleComponent & React.ClassAttributes<HTMLTableColElement> & React.ColHTMLAttributes<HTMLTableColElement>) => JSX.Element;
    colgroup: (props: RettleComponent & React.ClassAttributes<HTMLTableColElement> & React.ColgroupHTMLAttributes<HTMLTableColElement>) => JSX.Element;
    data: (props: RettleComponent & React.ClassAttributes<HTMLDataElement> & React.DataHTMLAttributes<HTMLDataElement>) => JSX.Element;
    datalist: (props: RettleComponent & React.ClassAttributes<HTMLDataListElement> & React.HTMLAttributes<HTMLDataListElement>) => JSX.Element;
    dd: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    del: (props: RettleComponent & React.ClassAttributes<HTMLModElement> & React.DelHTMLAttributes<HTMLModElement>) => JSX.Element;
    details: (props: RettleComponent & React.ClassAttributes<HTMLDetailsElement> & React.DetailsHTMLAttributes<HTMLDetailsElement>) => JSX.Element;
    dfn: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    dialog: (props: RettleComponent & React.ClassAttributes<HTMLDialogElement> & React.DialogHTMLAttributes<HTMLDialogElement>) => JSX.Element;
    div: (props: RettleComponent & React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
    dl: (props: RettleComponent & React.ClassAttributes<HTMLDListElement> & React.HTMLAttributes<HTMLDListElement>) => JSX.Element;
    dt: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    em: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    embed: (props: RettleComponent & React.ClassAttributes<HTMLEmbedElement> & React.EmbedHTMLAttributes<HTMLEmbedElement>) => JSX.Element;
    fieldset: (props: RettleComponent & React.ClassAttributes<HTMLFieldSetElement> & React.FieldsetHTMLAttributes<HTMLFieldSetElement>) => JSX.Element;
    figcaption: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    figure: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    footer: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    form: (props: RettleComponent & React.ClassAttributes<HTMLFormElement> & React.FormHTMLAttributes<HTMLFormElement>) => JSX.Element;
    h1: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    h2: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    h3: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    h4: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    h5: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    h6: (props: RettleComponent & React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement>) => JSX.Element;
    head: (props: RettleComponent & React.ClassAttributes<HTMLHeadElement> & React.HTMLAttributes<HTMLHeadElement>) => JSX.Element;
    header: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    hgroup: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    hr: (props: RettleComponent & React.ClassAttributes<HTMLHRElement> & React.HTMLAttributes<HTMLHRElement>) => JSX.Element;
    html: (props: RettleComponent & React.ClassAttributes<HTMLHtmlElement> & React.HtmlHTMLAttributes<HTMLHtmlElement>) => JSX.Element;
    i: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    iframe: (props: RettleComponent & React.ClassAttributes<HTMLIFrameElement> & React.IframeHTMLAttributes<HTMLIFrameElement>) => JSX.Element;
    img: (props: RettleComponent & React.ClassAttributes<HTMLImageElement> & React.ImgHTMLAttributes<HTMLImageElement>) => JSX.Element;
    input: (props: RettleComponent & React.ClassAttributes<HTMLInputElement> & React.InputHTMLAttributes<HTMLInputElement>) => JSX.Element;
    ins: (props: RettleComponent & React.ClassAttributes<HTMLModElement> & React.InsHTMLAttributes<HTMLModElement>) => JSX.Element;
    kbd: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    keygen: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.KeygenHTMLAttributes<HTMLElement>) => JSX.Element;
    label: (props: RettleComponent & React.ClassAttributes<HTMLLabelElement> & React.LabelHTMLAttributes<HTMLLabelElement>) => JSX.Element;
    legend: (props: RettleComponent & React.ClassAttributes<HTMLLegendElement> & React.HTMLAttributes<HTMLLegendElement>) => JSX.Element;
    li: (props: RettleComponent & React.ClassAttributes<HTMLLIElement> & React.LiHTMLAttributes<HTMLLIElement>) => JSX.Element;
    link: (props: RettleComponent & React.ClassAttributes<HTMLLinkElement> & React.LinkHTMLAttributes<HTMLLinkElement>) => JSX.Element;
    main: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    map: (props: RettleComponent & React.ClassAttributes<HTMLMapElement> & React.MapHTMLAttributes<HTMLMapElement>) => JSX.Element;
    mark: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    menu: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.MenuHTMLAttributes<HTMLElement>) => JSX.Element;
    menuitem: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    meta: (props: RettleComponent & React.ClassAttributes<HTMLMetaElement> & React.MetaHTMLAttributes<HTMLMetaElement>) => JSX.Element;
    meter: (props: RettleComponent & React.ClassAttributes<HTMLMeterElement> & React.MeterHTMLAttributes<HTMLMeterElement>) => JSX.Element;
    nav: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    noindex: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    noscript: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    object: (props: RettleComponent & React.ClassAttributes<HTMLObjectElement> & React.ObjectHTMLAttributes<HTMLObjectElement>) => JSX.Element;
    ol: (props: RettleComponent & React.ClassAttributes<HTMLOListElement> & React.OlHTMLAttributes<HTMLOListElement>) => JSX.Element;
    optgroup: (props: RettleComponent & React.ClassAttributes<HTMLOptGroupElement> & React.OptgroupHTMLAttributes<HTMLOptGroupElement>) => JSX.Element;
    option: (props: RettleComponent & React.ClassAttributes<HTMLOptionElement> & React.OptionHTMLAttributes<HTMLOptionElement>) => JSX.Element;
    output: (props: RettleComponent & React.ClassAttributes<HTMLOutputElement> & React.OutputHTMLAttributes<HTMLOutputElement>) => JSX.Element;
    p: (props: RettleComponent & React.ClassAttributes<HTMLParagraphElement> & React.HTMLAttributes<HTMLParagraphElement>) => JSX.Element;
    param: (props: RettleComponent & React.ClassAttributes<HTMLParamElement> & React.ParamHTMLAttributes<HTMLParamElement>) => JSX.Element;
    picture: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    pre: (props: RettleComponent & React.ClassAttributes<HTMLPreElement> & React.HTMLAttributes<HTMLPreElement>) => JSX.Element;
    progress: (props: RettleComponent & React.ClassAttributes<HTMLProgressElement> & React.ProgressHTMLAttributes<HTMLProgressElement>) => JSX.Element;
    q: (props: RettleComponent & React.ClassAttributes<HTMLQuoteElement> & React.QuoteHTMLAttributes<HTMLQuoteElement>) => JSX.Element;
    rp: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    rt: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    ruby: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    s: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    samp: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    slot: (props: RettleComponent & React.ClassAttributes<HTMLSlotElement> & React.SlotHTMLAttributes<HTMLSlotElement>) => JSX.Element;
    script: (props: RettleComponent & React.ClassAttributes<HTMLScriptElement> & React.ScriptHTMLAttributes<HTMLScriptElement>) => JSX.Element;
    section: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    select: (props: RettleComponent & React.ClassAttributes<HTMLSelectElement> & React.SelectHTMLAttributes<HTMLSelectElement>) => JSX.Element;
    small: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    source: (props: RettleComponent & React.ClassAttributes<HTMLSourceElement> & React.SourceHTMLAttributes<HTMLSourceElement>) => JSX.Element;
    span: (props: RettleComponent & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>) => JSX.Element;
    strong: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    style: (props: RettleComponent & React.ClassAttributes<HTMLStyleElement> & React.StyleHTMLAttributes<HTMLStyleElement>) => JSX.Element;
    sub: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    summary: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    sup: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    table: (props: never) => JSX.Element;
    template: (props: RettleComponent & React.ClassAttributes<HTMLTemplateElement> & React.HTMLAttributes<HTMLTemplateElement>) => JSX.Element;
    tbody: (props: RettleComponent & React.ClassAttributes<HTMLTableSectionElement> & React.HTMLAttributes<HTMLTableSectionElement>) => JSX.Element;
    td: (props: RettleComponent & React.ClassAttributes<HTMLTableDataCellElement> & React.TdHTMLAttributes<HTMLTableDataCellElement>) => JSX.Element;
    textarea: (props: RettleComponent & React.ClassAttributes<HTMLTextAreaElement> & React.TextareaHTMLAttributes<HTMLTextAreaElement>) => JSX.Element;
    tfoot: (props: RettleComponent & React.ClassAttributes<HTMLTableSectionElement> & React.HTMLAttributes<HTMLTableSectionElement>) => JSX.Element;
    th: (props: RettleComponent & React.ClassAttributes<HTMLTableHeaderCellElement> & React.ThHTMLAttributes<HTMLTableHeaderCellElement>) => JSX.Element;
    thead: (props: RettleComponent & React.ClassAttributes<HTMLTableSectionElement> & React.HTMLAttributes<HTMLTableSectionElement>) => JSX.Element;
    time: (props: RettleComponent & React.ClassAttributes<HTMLTimeElement> & React.TimeHTMLAttributes<HTMLTimeElement>) => JSX.Element;
    title: (props: RettleComponent & React.ClassAttributes<HTMLTitleElement> & React.HTMLAttributes<HTMLTitleElement>) => JSX.Element;
    tr: (props: RettleComponent & React.ClassAttributes<HTMLTableRowElement> & React.HTMLAttributes<HTMLTableRowElement>) => JSX.Element;
    track: (props: RettleComponent & React.ClassAttributes<HTMLTrackElement> & React.TrackHTMLAttributes<HTMLTrackElement>) => JSX.Element;
    u: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    ul: (props: RettleComponent & React.ClassAttributes<HTMLUListElement> & React.HTMLAttributes<HTMLUListElement>) => JSX.Element;
    var: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    video: (props: RettleComponent & React.ClassAttributes<HTMLVideoElement> & React.VideoHTMLAttributes<HTMLVideoElement>) => JSX.Element;
    wbr: (props: RettleComponent & React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement>) => JSX.Element;
    webview: (props: RettleComponent & React.ClassAttributes<HTMLWebViewElement> & React.WebViewHTMLAttributes<HTMLWebViewElement>) => JSX.Element;
    svg: (props: RettleComponent & React.SVGProps<SVGSVGElement>) => JSX.Element;
    animate: (props: RettleComponent & React.SVGProps<SVGElement>) => JSX.Element;
    animateMotion: (props: RettleComponent & React.SVGProps<SVGElement>) => JSX.Element;
    animateTransform: (props: RettleComponent & React.SVGProps<SVGElement>) => JSX.Element;
    circle: (props: RettleComponent & React.SVGProps<SVGCircleElement>) => JSX.Element;
    clipPath: (props: RettleComponent & React.SVGProps<SVGClipPathElement>) => JSX.Element;
    defs: (props: RettleComponent & React.SVGProps<SVGDefsElement>) => JSX.Element;
    desc: (props: RettleComponent & React.SVGProps<SVGDescElement>) => JSX.Element;
    ellipse: (props: RettleComponent & React.SVGProps<SVGEllipseElement>) => JSX.Element;
    feBlend: (props: RettleComponent & React.SVGProps<SVGFEBlendElement>) => JSX.Element;
    feColorMatrix: (props: RettleComponent & React.SVGProps<SVGFEColorMatrixElement>) => JSX.Element;
    feComponentTransfer: (props: RettleComponent & React.SVGProps<SVGFEComponentTransferElement>) => JSX.Element;
    feComposite: (props: RettleComponent & React.SVGProps<SVGFECompositeElement>) => JSX.Element;
    feConvolveMatrix: (props: RettleComponent & React.SVGProps<SVGFEConvolveMatrixElement>) => JSX.Element;
    feDiffuseLighting: (props: RettleComponent & React.SVGProps<SVGFEDiffuseLightingElement>) => JSX.Element;
    feDisplacementMap: (props: RettleComponent & React.SVGProps<SVGFEDisplacementMapElement>) => JSX.Element;
    feDistantLight: (props: RettleComponent & React.SVGProps<SVGFEDistantLightElement>) => JSX.Element;
    feDropShadow: (props: RettleComponent & React.SVGProps<SVGFEDropShadowElement>) => JSX.Element;
    feFlood: (props: RettleComponent & React.SVGProps<SVGFEFloodElement>) => JSX.Element;
    feFuncA: (props: RettleComponent & React.SVGProps<SVGFEFuncAElement>) => JSX.Element;
    feFuncB: (props: RettleComponent & React.SVGProps<SVGFEFuncBElement>) => JSX.Element;
    feFuncG: (props: RettleComponent & React.SVGProps<SVGFEFuncGElement>) => JSX.Element;
    feFuncR: (props: RettleComponent & React.SVGProps<SVGFEFuncRElement>) => JSX.Element;
    feGaussianBlur: (props: RettleComponent & React.SVGProps<SVGFEGaussianBlurElement>) => JSX.Element;
    feImage: (props: RettleComponent & React.SVGProps<SVGFEImageElement>) => JSX.Element;
    feMerge: (props: RettleComponent & React.SVGProps<SVGFEMergeElement>) => JSX.Element;
    feMergeNode: (props: RettleComponent & React.SVGProps<SVGFEMergeNodeElement>) => JSX.Element;
    feMorphology: (props: RettleComponent & React.SVGProps<SVGFEMorphologyElement>) => JSX.Element;
    feOffset: (props: RettleComponent & React.SVGProps<SVGFEOffsetElement>) => JSX.Element;
    fePointLight: (props: RettleComponent & React.SVGProps<SVGFEPointLightElement>) => JSX.Element;
    feSpecularLighting: (props: RettleComponent & React.SVGProps<SVGFESpecularLightingElement>) => JSX.Element;
    feSpotLight: (props: RettleComponent & React.SVGProps<SVGFESpotLightElement>) => JSX.Element;
    feTile: (props: RettleComponent & React.SVGProps<SVGFETileElement>) => JSX.Element;
    feTurbulence: (props: RettleComponent & React.SVGProps<SVGFETurbulenceElement>) => JSX.Element;
    filter: (props: RettleComponent & React.SVGProps<SVGFilterElement>) => JSX.Element;
    foreignObject: (props: RettleComponent & React.SVGProps<SVGForeignObjectElement>) => JSX.Element;
    g: (props: RettleComponent & React.SVGProps<SVGGElement>) => JSX.Element;
    image: (props: RettleComponent & React.SVGProps<SVGImageElement>) => JSX.Element;
    line: (props: RettleComponent & React.SVGProps<SVGLineElement>) => JSX.Element;
    linearGradient: (props: RettleComponent & React.SVGProps<SVGLinearGradientElement>) => JSX.Element;
    marker: (props: RettleComponent & React.SVGProps<SVGMarkerElement>) => JSX.Element;
    mask: (props: RettleComponent & React.SVGProps<SVGMaskElement>) => JSX.Element;
    metadata: (props: RettleComponent & React.SVGProps<SVGMetadataElement>) => JSX.Element;
    mpath: (props: RettleComponent & React.SVGProps<SVGElement>) => JSX.Element;
    path: (props: RettleComponent & React.SVGProps<SVGPathElement>) => JSX.Element;
    pattern: (props: RettleComponent & React.SVGProps<SVGPatternElement>) => JSX.Element;
    polygon: (props: RettleComponent & React.SVGProps<SVGPolygonElement>) => JSX.Element;
    polyline: (props: RettleComponent & React.SVGProps<SVGPolylineElement>) => JSX.Element;
    radialGradient: (props: RettleComponent & React.SVGProps<SVGRadialGradientElement>) => JSX.Element;
    rect: (props: RettleComponent & React.SVGProps<SVGRectElement>) => JSX.Element;
    stop: (props: RettleComponent & React.SVGProps<SVGStopElement>) => JSX.Element;
    switch: (props: RettleComponent & React.SVGProps<SVGSwitchElement>) => JSX.Element;
    symbol: (props: RettleComponent & React.SVGProps<SVGSymbolElement>) => JSX.Element;
    text: (props: RettleComponent & React.SVGProps<SVGTextElement>) => JSX.Element;
    textPath: (props: RettleComponent & React.SVGProps<SVGTextPathElement>) => JSX.Element;
    tspan: (props: RettleComponent & React.SVGProps<SVGTSpanElement>) => JSX.Element;
    use: (props: RettleComponent & React.SVGProps<SVGUseElement>) => JSX.Element;
    view: (props: RettleComponent & React.SVGProps<SVGViewElement>) => JSX.Element;
};
interface CommentOutProps {
    children?: React.ReactNode;
    begin?: string;
    end?: string;
}
declare const CommentOut: React.FC<CommentOutProps>;
export { Component, CommentOut, createRettle, defineOption, createCache, createDynamicRoute, };
